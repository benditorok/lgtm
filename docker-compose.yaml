services:
  # OpenTelemetry Collector - Central telemetry router
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      # Exposed externally for applications to send telemetry data
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "13133:13133" # Health check endpoint
    expose:
      # Internal ports for monitoring
      - "8888"        # Prometheus metrics (self-monitoring)
    depends_on:
      - loki
      - tempo
      - prometheus
      - mimir
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133/"]
      timeout: 5s
      interval: 10s
      retries: 3

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    # Port 3100 only accessible internally
    expose:
      - "3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - ./data/loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana - Observability visualization (Web UI)
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    ports:
      # Exposed externally for web UI access
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - tempo
      - mimir
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Tempo - Distributed tracing backend
  tempo:
    image: grafana/tempo:2.3.0
    container_name: tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo-config.yaml:/etc/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    # Port 3200 only accessible internally
    expose:
      - "3200"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mimir - Scalable long-term metrics storage
  mimir:
    image: grafana/mimir:2.10.0
    container_name: mimir
    restart: unless-stopped
    command: ["-config.file=/etc/mimir.yaml"]
    volumes:
      - ./mimir/mimir-config.yaml:/etc/mimir.yaml:ro
      - ./data/mimir:/data
    # Ports only accessible internally
    expose:
      - "8080"   # HTTP server
      - "7946"   # Gossip ring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Metrics - Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    # Port 9090 only accessible internally
    expose:
      - "9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    depends_on:
      - mimir
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
